#services:
#  app:
#    build: .
#    container_name: flight-reservation-app
#    ports:
#      - "8080:8080"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://flight-reservation-db:5432/flightBooking
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: postgres
#      SPRING_MAIL_USERNAME: ${MAIL_USERNAME}
#      SPRING_MAIL_PASSWORD: ${MAIL_PASSWORD}
#    networks:
#      - flight_reservation_network
#    depends_on:
#      - db
#
#  db:
#    image: postgres:latest
#    container_name: flight-reservation-db
#    environment:
#      POSTGRES_DB: flightBooking
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#    ports:
#      - "5433:5432"
#    networks:
#      - flight_reservation_network
#
#networks:
#  flight_reservation_network:
#    driver: bridge
services:
  app:
    build: .
    container_name: flight-reservation-app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://flight-reservation-db:5432/flightBooking
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_MAIL_USERNAME: ${MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${MAIL_PASSWORD}
    networks:
      - flight_reservation_network
    depends_on:
      - db
    command: [ "java", "-jar", "/app/flight-reservation-system.jar" ]

  db:
    image: postgres:15
    container_name: flight-reservation-db
    environment:
      POSTGRES_DB: flightBooking
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    networks:
      - flight_reservation_network

  flyway:
    image: flyway/flyway
    container_name: flyway-migrator
    environment:
      FLYWAY_URL: jdbc:postgresql://flight-reservation-db:5432/flightBooking
      FLYWAY_USER: postgres
      FLYWAY_PASSWORD: postgres
    networks:
      - flight_reservation_network
    depends_on:
      - db
    command: ["migrate"]

networks:
  flight_reservation_network:
    driver: bridge

